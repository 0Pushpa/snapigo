require File.join(File.dirname(`node --print "require.resolve('expo/package.json')"`), "scripts/autolinking")
require File.join(File.dirname(`node --print "require.resolve('react-native/package.json')"`), "scripts/react_native_pods")

require 'json'
podfile_properties = JSON.parse(File.read(File.join(__dir__, 'Podfile.properties.json'))) rescue {}

ENV['RCT_NEW_ARCH_ENABLED'] = '0' if podfile_properties['newArchEnabled'] == 'false'
ENV['EX_DEV_CLIENT_NETWORK_INSPECTOR'] = podfile_properties['EX_DEV_CLIENT_NETWORK_INSPECTOR']

# iOS 16.0 minimum to play nice with MLKit and modern pods
platform :ios, podfile_properties['ios.deploymentTarget'] || '16.0'

install! 'cocoapods', :deterministic_uuids => false

prepare_react_native_project!

target 'Snapigo' do
  use_expo_modules!

  if ENV['EXPO_USE_COMMUNITY_AUTOLINKING'] == '1'
    config_command = ['node', '-e', "process.argv=['', '', 'config'];require('@react-native-community/cli').run()"]
  else
    config_command = [
      'npx', 'expo-modules-autolinking', 'react-native-config',
      '--json', '--platform', 'ios'
    ]
  end

  config = use_native_modules!(config_command)

  use_frameworks! :linkage => podfile_properties['ios.useFrameworks'].to_sym if podfile_properties['ios.useFrameworks']
  use_frameworks! :linkage => ENV['USE_FRAMEWORKS'].to_sym if ENV['USE_FRAMEWORKS']

  use_react_native!(
    :path => config[:reactNativePath],
    :hermes_enabled => podfile_properties['expo.jsEngine'].nil? || podfile_properties['expo.jsEngine'] == 'hermes',
    :app_path => "#{Pod::Config.instance.installation_root}/..",
    :privacy_file_aggregation_enabled => podfile_properties['apple.privacyManifestAggregationEnabled'] != 'false',
  )

  # --- ML Kit pods (xcframeworks with simulator arm64 support). Add the ones you use:
  # pod 'GoogleMLKit/TextRecognition', '~> 3.2'
  # pod 'GoogleMLKit/BarcodeScanning', '~> 3.2'
  # pod 'GoogleMLKit/FaceDetection',   '~> 3.2'
  # pod 'GoogleMLKit/ObjectDetection', '~> 3.2'

  post_install do |installer|
    react_native_post_install(
      installer,
      config[:reactNativePath],
      :mac_catalyst_enabled => false,
      :ccache_enabled => podfile_properties['apple.ccacheEnabled'] == 'true',
    )

    # Unify DEFINES_MODULE to silence xcconfig merge warnings (harmless)
    problematic = %w[expo-dev-menu Main ReactNativeCompatibles SafeAreaView Vendored]
    installer.pods_project.targets.each do |t|
      next unless problematic.include?(t.name)
      t.build_configurations.each do |c|
        c.build_settings['DEFINES_MODULE'] = 'YES'
      end
    end

    # Keep Expoâ€™s resource bundle code signing disabled
    installer.target_installation_results.pod_target_installation_results
      .each do |_pod_name, target_installation_result|
        target_installation_result.resource_bundle_targets.each do |resource_bundle_target|
          resource_bundle_target.build_configurations.each do |cfg|
            cfg.build_settings['CODE_SIGNING_ALLOWED'] = 'NO'
          end
        end
      end
  end
end
